{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","assets/images/user-profile.webp","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","userPhoto","aboutMe","maxLength10","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","Post","items","item","message","likes","likesCount","MyPosts","React","memo","postsElements","posts","map","p","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.0d909074.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__Q8K4E\",\"userPhoto\":\"ProfileInfo_userPhoto__2hA2Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1bIRz\"};","module.exports = __webpack_public_path__ + \"static/media/user-profile.b6681619.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3NtgV\",\"posts\":\"MyPosts_posts__2oJaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2OV__\",\"items\":\"Post_items__yO-rE\",\"likes\":\"Post_likes__3QoAU\"};","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks= (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    } \r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div onDoubleClick={ activateEditMode }>\r\n                        <span>{props.status || \"------\"}</span>\r\n                    </div>\r\n                }\r\n                { editMode &&\r\n                    <div>\r\n                        <input onChange={ onStatusChange } autoFocus={true} onBlur={ deactivateEditMode }  value={status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport userPhoto from '../../../assets/images/user-profile.webp';\r\nimport Preloader from '../../common/preloader/preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large != null ? profile.photos.large : userPhoto} className={s.userPhoto} />\r\n                <div>{profile.aboutMe}</div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../../utils/validators/validators';\r\nimport { Textarea } from '../../../common/preloader/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} placeholder=\"Post message\" name=\"newPostText\" validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'profile-add-post'}) (AddPostForm);","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nimport userPhoto from \"../../../../assets/images/user.png\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.items}>\r\n      <div className={s.item}>\r\n        <img src={userPhoto} />\r\n        <div>{props.message}</div>\r\n      </div>\r\n      <div className={s.likes}>\r\n        <span>{props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport { Component } from 'react';\r\nimport AddPostForm from './AddPostForm/AddPostForm';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = [\r\n        props.posts.map(p =>\r\n            <Post message={p.message} likesCount={p.likesCount} />\r\n        )\r\n    ];\r\n\r\n    let onAddPost = (values) => { \r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostForm onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount () {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n        )\r\n    };\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}), withRouter) (ProfileContainer);"],"sourceRoot":""}