{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/user-profile.webp","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","maxLength10","maxLengthCreator","Field","component","placeholder","name","validate","required","Post","items","item","message","likes","likesCount","MyPosts","React","memo","postsElements","posts","p","id","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","prevProps","prevState","snapshot","refreshProfile","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.5c75d37f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__Q8K4E\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3-3Ou\",\"contact\":\"ProfileInfo_contact__25x-J\"};","module.exports = __webpack_public_path__ + \"static/media/user-profile.b6681619.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3NtgV\",\"posts\":\"MyPosts_posts__2oJaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2OV__\",\"items\":\"Post_items__yO-rE\",\"likes\":\"Post_likes__3QoAU\"};","import React, { useEffect, useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks= (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    } \r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                    <div onDoubleClick={ activateEditMode }>\r\n                        <b>Status</b>: <span>{props.status || \"------\"}</span>\r\n                    </div>\r\n                }\r\n                { editMode &&\r\n                    <div>\r\n                        <input onChange={ onStatusChange } autoFocus={true} onBlur={ deactivateEditMode }  value={status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {\r\n  createField,\r\n  Input,\r\n  Textarea,\r\n} from \"../../common/FormsControls/FormsControls\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <button>Save</button>\r\n      </div>\r\n      {error && <div className={style.formSummaryError}>{error}</div>}\r\n      <div>\r\n        <b>Full name</b>: {createField(\"Full name\", \"fullname\", [], Input)}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>:{\" \"}\r\n        {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n      </div>\r\n      <div>\r\n        <b>My professional skills</b>:{\" \"}\r\n        {createField(\r\n          \"My professional skills\",\r\n          \"lookingForAJobDescription\",\r\n          [],\r\n          Textarea\r\n        )}\r\n      </div>\r\n      <div>\r\n        <b>About me</b>: {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:{\" \"}\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <div key={key} className={s.contact}>\r\n              <b>\r\n                {key}: {createField(key, \"contacts.\" + key, [], Input)}\r\n              </b>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\" })(\r\n  ProfileDataForm\r\n);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React, { useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../assets/images/user-profile.webp\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  isOwner,\r\n  savePhoto,\r\n  saveProfile,\r\n}) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n        {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n        {editMode ? (\r\n          <ProfileDataForm\r\n            initialValues={profile}\r\n            profile={profile}\r\n            onSubmit={onSubmit}\r\n          />\r\n        ) : (\r\n          <ProfileData\r\n            profile={profile}\r\n            isOwner={isOwner}\r\n            goToEditMode={() => {\r\n              setEditMode(true);\r\n            }}\r\n          />\r\n        )}\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>Edit</button>\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>Full name</b>: {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>About me</b>: {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>:{\" \"}\r\n        {Object.keys(profile.contacts).map((key) => (\r\n          <Contact\r\n            keys={key}\r\n            contactTitle={key}\r\n            contactValue={profile.contacts[key]}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={s.contact}>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../../utils/validators/validators';\r\nimport { Textarea } from '../../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} placeholder=\"Post message\" name=\"newPostText\" validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'profile-add-post'}) (AddPostForm);","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\nimport userPhoto from \"../../../../assets/images/user.png\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.items}>\r\n      <div className={s.item}>\r\n        <img src={userPhoto} />\r\n        <div>{props.message}</div>\r\n      </div>\r\n      <div className={s.likes}>\r\n        <span>{props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport AddPostForm from './AddPostForm/AddPostForm';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = [\r\n        props.posts.map(p =>\r\n            <Post key={p.id} message={p.message} likesCount={p.likesCount} />\r\n        )\r\n    ];\r\n\r\n    let onAddPost = (values) => { \r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostForm onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} isOwner={props.isOwner} savePhoto={props.savePhoto} saveProfile={props.saveProfile} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n} from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}