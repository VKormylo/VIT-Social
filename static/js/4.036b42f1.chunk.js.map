{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialogsItem","src","alt","dialogItem","activeClassName","activeLink","to","name","Message","message","user","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","newMessageBody","title","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,MAAQ,uBAAuB,YAAc,6BAA6B,WAAa,4BAA4B,WAAa,4BAA4B,QAAU,yBAAyB,SAAW,4B,oHCa7RC,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,aACd,yBAAKC,IAAI,2GAA2GC,IAAI,KACxH,kBAAC,IAAD,CAASJ,UAAWC,IAAEI,WAAYC,gBAAiBL,IAAEM,WAAYC,GAAIV,GAAOD,EAAMY,QCG/EC,G,OARC,SAACb,GACb,OACI,6BACI,yBAAKG,UAAS,UAAKC,IAAEU,QAAP,YAAkBd,EAAMe,OAASf,EAAMc,Y,iCCF3DE,EAAcC,YAAiB,IAetBC,cAAU,CAACC,KAAM,2BAAjBD,EAbQ,SAAClB,GACpB,OACI,0BAAMoB,SAAUpB,EAAMqB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUV,GAAcJ,KAAK,iBAAiBe,YAAY,wBAErG,6BACI,6CC8BDC,EAtCC,SAAC5B,GAEb,IAAI6B,EAAQ7B,EAAM8B,YAEdC,EAAkB,CAClBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OACf,kBAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMV,GAAIgC,EAAEhC,GAAIiC,IAAKD,EAAEhC,SAI/CkC,EAAmB,CACnBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAChB,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASC,KAAMuB,EAAEvB,KAAMoB,IAAKG,EAAEpC,SAIrC2B,EAAMU,eAM3B,OACI,6BACI,yBAAKpC,UAAWC,IAAEoC,OAAlB,WACA,yBAAKrC,UAAWC,IAAE4B,SACd,yBAAK7B,UAAWC,IAAEqC,cACbV,GAEL,yBAAK5B,UAAWC,IAAEiC,UACd,6BAAOD,GACP,kBAAC,EAAD,CAAgBhB,SAbZ,SAACsB,GACjB1C,EAAM2C,YAAYD,EAAOH,uB,gDCrB7BK,EAA6B,SAACf,GAAD,MAAY,CACzCgB,OAAQhB,EAAMiB,KAAKD,S,OCgBRE,sBAAQC,aAdC,SAACnB,GACrB,MAAO,CACHC,YAAaD,EAAMC,gBAIA,SAACmB,GACxB,MAAO,CACHN,YAAa,SAACJ,GACVU,EAASC,YAAmBX,UDRR,SAACY,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKrD,MAAM6C,OACT,kBAACM,EAAcE,KAAKrD,OADI,kBAAC,IAAD,CAAUW,GAAI,eAHV,GACX2C,IAAMH,WAQtC,OADqCH,YAAQJ,EAARI,CAAqCI,KCK/DL,CAAyEnB","file":"static/js/4.036b42f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1W1Ty\",\"dialogsItems\":\"Dialogs_dialogsItems__3mnKV\",\"title\":\"Dialogs_title__JTgWt\",\"dialogsItem\":\"Dialogs_dialogsItem__3enB-\",\"activeLink\":\"Dialogs_activeLink__14uuo\",\"dialogItem\":\"Dialogs_dialogItem__N6JBk\",\"message\":\"Dialogs_message__1t6zp\",\"messages\":\"Dialogs_messages__AxJ60\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialogsItem}>\r\n            <img src=\"https://img.pngio.com/user-profile-avatar-job-social-businessman-profession-user-profile-png-512_512.png\" alt=\"\"/>\r\n            <NavLink className={s.dialogItem} activeClassName={s.activeLink} to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport './Message.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={`${s.message} ${props.user}`}>{props.message}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/preloader/FormsControls/FormsControls';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'}) (AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    \r\n    let dialogsElements = [\r\n        state.dialogs.map(d =>\r\n            <DialogItem name={d.name} id={d.id} key={d.id} />\r\n        )\r\n    ];\r\n\r\n    let messagesElements = [\r\n        state.messages.map(m =>\r\n            <Message message={m.message} user={m.user} key={m.id} />\r\n        )\r\n    ];\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.title}>Dialogs</div>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div>{ messagesElements }</div>\r\n                    <AddMessageForm onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n    \r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect) (Dialogs);"],"sourceRoot":""}